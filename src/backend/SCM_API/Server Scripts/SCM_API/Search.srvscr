/******************************************************************************
Description.. :	Search for items and return all matches.
                Applies currently to scripts only (not XML forms).
Author....... :	DC
Date......... : 2023-06-29
*******************************************************************************/;
:DECLARE sSQL, searchStr, aItems, oResult, oUtils, bFolder;

oUtils := CreateUDObject("SCM_API.Utils", {});
oResponse := CreateUDObject({
	{"success", .F.},
	{"data", NIL}
});

:IF Request:QueryString:IsProperty("itemName");
	searchStr := Request:QueryString:itemName;
:ELSE;
	Response:StatusCode := 400;
	oResponse:success := .F.;
	oResponse:data := String:Format("Missing required parameter: {0}", "itemName");
	:RETURN oResponse;
:ENDIF;

sSQL :=
"select 
f.DISPLAYTEXT as name,
'CodeBehind' as type,
case f.FORMTYPE
	when 'XFD' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/XFDForms/CodeBehind/' + f.DISPLAYTEXT
	when 'HTML' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/HTMLForms/CodeBehind/' + f.DISPLAYTEXT
	when 'PHONE' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/PhoneForms/CodeBehind/' + f.DISPLAYTEXT
	when 'TABLET' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/TabletForms/CodeBehind/' + f.DISPLAYTEXT
end as uri,
f.CHECKEDOUTBY as checkedOutBy,
'JS' as language,
'N' as isFolder
from LIMSXFDFORMS f
join LIMSAPPLICATIONS a on a.APPID = f.APPID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where f.FORMNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name, 
'AppServerScript' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/ServerScripts/' + s.DISPLAYTEXT as URI,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSAPPLICATIONS a
join LIMSAPPSERVERSCRIPTS aps on aps.APPID = a.APPID
join LIMSSERVERSCRIPTS s on s.SCRIPTID = aps.SCRIPTID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where s.SCRIPTNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name,
'AppClientScript' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/ClientScripts/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSAPPLICATIONS a
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
join LIMSAPPCLIENTSCRIPTS apc on apc.APPID = a.APPID
join LIMSCLIENTSCRIPTS s on s.SCRIPTID = apc.SCRIPTID
where s.SCRIPTNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name, 
'AppDataSource' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/DataSources/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSAPPLICATIONS a
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
join LIMSAPPDATASOURCES aps on aps.APPID = a.APPID
join LIMSDATASOURCES s on s.DATASOURCEID = aps.DATASOURCEID
where s.DSNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name,
'ServerScript' as type,
'/ServerScripts/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSSERVERSCRIPTCATEGORIES c
join LIMSSERVERSCRIPTS s on s.CATEGORYID = c.CATEGORYID
where s.SCRIPTNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name,
'DataSource' as type,
'/DataSources/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSDATASOURCECATEGORIES c
join LIMSDATASOURCES s on s.CATEGORYID = c.CATEGORYID
where s.DSNAME like '%" + limsstring(searchStr) + "%'

union

select
s.DISPLAYTEXT as name,
'ClientScript' as type,
'/ClientScripts/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder
from LIMSCLIENTSCRIPTCATEGORIES c
join LIMSCLIENTSCRIPTS s on s.CATEGORYID = c.CATEGORYID
where s.SCRIPTNAME like '%" + limsstring(searchStr) + "%'

order by 3";

aItems := SQLexecute(sSQL, "Dictionary");

:DECLARE i, aResultItems, sLanguage;
aResultItems := {};
:FOR i:=1 :TO Len(aItems);
	sLanguage := aItems[i][5];
	
	:IF Upper(sLanguage) = "STARLIMS";
			sLanguage := "SSL";
	:ENDIF;
	:IF Upper(sLanguage) = "JSCRIPT";
			sLanguage := "JS";
	:ENDIF;

	oItem := oUtils:RemoveDBNull(CreateUDObject({
		{"name", aItems[i][3] + '.' + Lower(sLanguage)},
		{"type", aItems[i][2]},
		{"uri", aItems[i][3]},
		{"checkedOutBy", aItems[i][4]},
		{"language", sLanguage},
		{"isFolder", .F.}
	}));
	AAdd(aResultItems, oItem);
:NEXT;

oResult := CreateUDObject({
	{"success", .T.},
	{"data", CreateUDObject({{"items", aResultItems}})}
});

Response:StatusCode := 200;
:RETURN oResult;